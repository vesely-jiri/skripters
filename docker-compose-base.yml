services:

#-------- frontend services---------------------------------------------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    networks:
      - internal

#-------- backend services---------------------------------------------
  skripters-api-gateway:
    build:
      context: ./services/skripters-api-gateway
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-development}
    ports:
      - "8080:8080"
    depends_on:
      - skripters-auth
      - rabbitmq
    networks:
      - internal

  skripters-auth:
    build:
      context: ./services/skripters-auth
      dockerfile: Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-development}
    depends_on:
      - db-auth
      - rabbitmq
    networks:
      - internal

#--------Internal communication---------------------------------------------
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - "15672:15672"
    networks:
      - internal

#--------databases---------------------------------------------
  db-auth:
    image: postgres
    environment:
      POSTGRES_USER: ${AUTH_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${AUTH_POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${AUTH_POSTGRES_DB:-postgres}
    ports:
      - ${AUTH_POSTGRES_PORT}:${AUTH_POSTGRES_PORT}
    volumes:
      - db-auth-data:/var/lib/postgresql/data

#--------other--------------------------------------------------

volumes:
  db-auth-data:

networks:
  internal:
    driver: bridge